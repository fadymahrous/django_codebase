upstream django_app {
  server app:8000;      # docker service name:port
  keepalive 32;
}

# HTTP -> HTTPS (preserve path + query)
server {
  listen 80;
  listen [::]:80;
  server_name <domain-name>.de;
  return 301 https://$host$request_uri;
}

# HTTPS
server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;

  server_name <domain-name>.de;

  # TLS (self-signed or real certs mounted at these paths)
  ssl_certificate     /etc/nginx/certs/domainey.crt;
  ssl_certificate_key /etc/nginx/certs/domainey.key;

  # Reasonable TLS defaults
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers off;
  ssl_session_cache shared:SSL:10m;
  ssl_session_tickets off;

  # General
  server_tokens off;
  client_max_body_size 20m;  # adjust as needed

  # App proxy
  location / {
    proxy_pass http://django_app;
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_set_header Host              $host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_read_timeout 60s;
    proxy_redirect off;
  }

  # Static & media (served by nginx; mount these into container)
  location ^~ /static/ {
    alias /static/;
    try_files $uri $uri/ =404;
  }

  location ^~ /media/ {
    alias /media/;
    try_files $uri $uri/ =404;
  }

  # Caching for static assets
  location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg)$ {
    expires 1y;
    add_header Cache-Control "public, immutable";
    try_files $uri =404;
  }

  # Security headers
  add_header X-Frame-Options "SAMEORIGIN" always;
  add_header X-XSS-Protection "1; mode=block" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header Strict-Transport-Security "max-age=63072000; includeSubDomains" always;
}
